# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import datetime
import datacenter.fields
import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.conf import settings
import django.core.validators


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('datacenter', '0037_added_drivinglicense_and_expire_date'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalAdvisor',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('my_promise', models.TextField(blank=True)),
                ('questions', models.TextField(blank=True)),
                ('profile_confirmation_mail', models.BooleanField(default=0)),
                ('is_submitted_questions', models.BooleanField(default=0)),
                ('is_document_submited', models.BooleanField(default=0)),
                ('is_submitted_all', models.BooleanField(default=0)),
                ('is_confirmed_advisor', models.BooleanField(default=0)),
                ('is_register_advisor', models.BooleanField(default=0)),
                ('is_stream_user', models.BooleanField(default=0)),
                ('is_certified_advisor', models.BooleanField(default=0)),
                ('is_honorable_advisor', models.BooleanField(default=0)),
                ('is_corporate_advisor', models.BooleanField(default=0)),
                ('wordpress_user_id', models.CharField(default=0, max_length=10)),
                ('crisil_application_status', models.CharField(default=b'not_applied', max_length=50)),
                ('is_crisil_verified', models.BooleanField(default=0)),
                ('crisil_registration_number', models.CharField(max_length=30, null=True, blank=True)),
                ('crisil_expiry_date', models.DateField(null=True, blank=True)),
                ('is_registered_advisor', models.BooleanField(default=0)),
                ('sebi_number', models.CharField(max_length=50, null=True, blank=True)),
                ('amfi_number', models.CharField(max_length=50, null=True, blank=True)),
                ('irda_number', models.CharField(max_length=50, null=True, blank=True)),
                ('sebi_expiry_date', models.DateField(null=True, blank=True)),
                ('irda_expiry_date', models.DateField(null=True, blank=True)),
                ('amfi_expiry_date', models.DateField(null=True, blank=True)),
                ('other_expiry_date', models.DateField(null=True, blank=True)),
                ('other_registered_organisation', models.CharField(max_length=100, null=True, blank=True)),
                ('other_registered_number', models.CharField(max_length=50, null=True, blank=True)),
                ('practice_city', models.CharField(max_length=50, null=True, blank=True)),
                ('practice_location', models.CharField(max_length=50, null=True, blank=True)),
                ('practice_years', models.PositiveIntegerField(null=True, blank=True)),
                ('financial_instruments', models.TextField(null=True, blank=True)),
                ('other_financial_instruments', models.CharField(max_length=50, null=True, blank=True)),
                ('credibility_declaration_qualification', models.CharField(max_length=50, null=True, blank=True)),
                ('certification_title', models.TextField(null=True, blank=True)),
                ('reia_level', models.TextField(default=b'REISE - Real Estate Investment Support Executive')),
                ('is_rera', models.BooleanField(default=0)),
                ('rera_details', models.TextField(blank=True)),
                ('total_clients_served', models.PositiveIntegerField(null=True, blank=True)),
                ('total_advisors_connected', models.PositiveIntegerField(null=True, blank=True)),
                ('sms_alert', models.BooleanField(default=1)),
                ('my_sales', models.CharField(max_length=500, null=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('practice_country', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Country', null=True)),
                ('type_of_advisor', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.AdvisorType', null=True)),
                ('user_profile', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.UserProfile', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical advisor',
            },
        ),
        migrations.CreateModel(
            name='HistoricalAdvisorRanking',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('rating', models.FloatField(null=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('advisor', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Advisor', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('member', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Member', null=True)),
                ('transaction', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.BookingInvestment', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical advisor ranking',
            },
        ),
        migrations.CreateModel(
            name='HistoricalAdvisorRating',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('trust', models.FloatField(default=0)),
                ('financial_knowledge', models.FloatField(default=0)),
                ('communication', models.FloatField(default=0)),
                ('advisory', models.FloatField(default=0)),
                ('ethics', models.FloatField(default=0)),
                ('customer_care', models.FloatField(default=0)),
                ('no_of_questions', models.FloatField(default=6)),
                ('avg_rating', models.FloatField(default=0)),
                ('activation_key', models.CharField(max_length=250, null=True, blank=True)),
                ('user_type', models.CharField(max_length=20, null=True, blank=True)),
                ('feedback', models.CharField(max_length=250, null=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('advisor', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Advisor', null=True)),
                ('existing_user_profile', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.UserProfile', null=True)),
                ('external_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.ExternalUser', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical advisor rating',
            },
        ),
        migrations.CreateModel(
            name='HistoricalAllocation',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('investor', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Investor', null=True)),
                ('reingo', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Reingo', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical allocation',
            },
        ),
        migrations.CreateModel(
            name='HistoricalBlock',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('name', models.CharField(max_length=20, blank=True)),
                ('floor_count', models.PositiveSmallIntegerField(default=5)),
                ('square_feet', models.PositiveIntegerField(default=1000)),
                ('block_layout', django.contrib.gis.db.models.fields.PolygonField(srid=4326, null=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('project', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Project', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical block',
            },
        ),
        migrations.CreateModel(
            name='HistoricalBooking',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('investor', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Investor', null=True)),
                ('reingo', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Reingo', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical booking',
            },
        ),
        migrations.CreateModel(
            name='HistoricalBookingInvestment',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('issued_amount', models.IntegerField(default=0, blank=True)),
                ('allocated_amount', models.IntegerField(default=0, blank=True)),
                ('allocated_date', models.DateField(null=True, editable=False, blank=True)),
                ('payment_details', datacenter.fields.JSONField(null=True, blank=True)),
                ('remarks', models.TextField(null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=20, choices=[(b'booked', b'Booked'), (b'cheque_collected', b'Cheque Collected'), (b'cheque_deposited', b'Cheque Deposited'), (b'cheque_realised', b'Cheque Realised'), (b'cheque_rejected', b'Cheque Rejected'), (b'allocated', b'Allocated'), (b'rejected', b'Rejected')])),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('advisor', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Advisor', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('member', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Member', null=True)),
                ('opportunity', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Opportunity', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical booking investment',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCrisilCertifications',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('crisil_registration_number', models.CharField(max_length=30, null=True, blank=True)),
                ('crisil_expiry_date', models.DateField(null=True, blank=True)),
                ('created_date', models.DateTimeField(editable=False, blank=True)),
                ('modified_date', models.DateTimeField(editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('advisor_id', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Advisor', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('transcation_id', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.TransactionsDetails', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical crisil certifications',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDeveloper',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('name', models.CharField(max_length=50)),
                ('tin', models.CharField(max_length=50)),
                ('registration_number', models.CharField(max_length=25)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('user_profile', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.UserProfile', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical developer',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDocument',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('document', models.TextField(max_length=100)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('document_category', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.DocumentCategories', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('opportunity', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Opportunity', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical document',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDocumentCategories',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('name', models.CharField(max_length=50, null=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical document categories',
            },
        ),
        migrations.CreateModel(
            name='HistoricalExternalUser',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('name', models.CharField(max_length=50, null=True, blank=True)),
                ('email', models.EmailField(max_length=254, null=True, blank=True)),
                ('phone', models.CharField(max_length=50, null=True, blank=True)),
                ('sebi_number', models.CharField(max_length=50, null=True, blank=True)),
                ('sebi_expiry_date', models.DateTimeField(null=True, blank=True)),
                ('amfi_number', models.CharField(max_length=50, null=True, blank=True)),
                ('amfi_expiry_date', models.DateTimeField(null=True, blank=True)),
                ('irda_number', models.CharField(max_length=50, null=True, blank=True)),
                ('irda_expiry_date', models.DateTimeField(null=True, blank=True)),
                ('other_registered_organisation', models.CharField(max_length=100, null=True, blank=True)),
                ('other_registered_number', models.CharField(max_length=50, null=True, blank=True)),
                ('other_certificate_expiry_date', models.DateTimeField(null=True, blank=True)),
                ('rera_details', models.TextField(blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical external user',
            },
        ),
        migrations.CreateModel(
            name='HistoricalGroupMaster',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('group_name', models.CharField(max_length=250, db_index=True)),
                ('created_date', models.DateTimeField(editable=False, blank=True)),
                ('modified_date', models.DateTimeField(editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('group_owner', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.UserProfile', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical group master',
            },
        ),
        migrations.CreateModel(
            name='HistoricalGroupMembers',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('created_date', models.DateTimeField(editable=False, blank=True)),
                ('modified_date', models.DateTimeField(editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('group', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.GroupMaster', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('user_profile', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.UserProfile', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical group members',
            },
        ),
        migrations.CreateModel(
            name='HistoricalInvestor',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('user_profile', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.UserProfile', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical investor',
            },
        ),
        migrations.CreateModel(
            name='HistoricalIssuer',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('name', models.CharField(max_length=50, blank=True)),
                ('address', models.CharField(max_length=250, null=True, blank=True)),
                ('telephone', models.CharField(max_length=15, null=True, blank=True)),
                ('fax', models.CharField(max_length=15, null=True, blank=True)),
                ('website', models.CharField(max_length=50, null=True, blank=True)),
                ('email', models.CharField(max_length=50, null=True, blank=True)),
                ('other_offices', models.CharField(max_length=250, null=True, blank=True)),
                ('staff', models.CharField(max_length=250, null=True, blank=True)),
                ('investment_statistics', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('total_capital_raised', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('est_available_capital', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('typical_investment_size', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('background', models.CharField(max_length=250, null=True, blank=True)),
                ('year_established', models.DateField(null=True, blank=True)),
                ('preferences_strategy', models.CharField(max_length=20, null=True, choices=[(b'core', b'Core'), (b'core_plus', b'Core-Plus'), (b'debit', b'Debit'), (b'distressed', b'Distressed')])),
                ('property_type', models.CharField(max_length=20, null=True, choices=[(b'residential', b'Residential'), (b'commercial', b'Commercial')])),
                ('geography', models.CharField(max_length=40, null=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical issuer',
            },
        ),
        migrations.CreateModel(
            name='HistoricalLevel',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('number', models.PositiveSmallIntegerField(default=1)),
                ('unit_count', models.PositiveSmallIntegerField(default=2)),
                ('plan', models.TextField(max_length=100)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('block', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Block', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical level',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMeetUpEvent',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('scheduled', models.DateTimeField(null=True, blank=True)),
                ('address', models.CharField(max_length=500, null=True, blank=True)),
                ('name', models.CharField(max_length=50, null=True, blank=True)),
                ('meetup_event_id', models.CharField(max_length=20, null=True, blank=True)),
                ('description', models.CharField(max_length=800, null=True, blank=True)),
                ('duration', models.CharField(max_length=30, null=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('user_profile', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.UserProfile', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical meet up event',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMember',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('occupation', models.CharField(max_length=80, blank=True)),
                ('office_location', models.CharField(max_length=50, blank=True)),
                ('office_city', models.CharField(max_length=50, blank=True)),
                ('office_website', models.CharField(max_length=100, blank=True)),
                ('designation', models.CharField(max_length=50, blank=True)),
                ('year_income', models.CharField(max_length=20, blank=True)),
                ('member_questions', models.TextField(blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('is_submitted_all', models.BooleanField(default=0)),
                ('is_register_member', models.BooleanField(default=0)),
                ('net_worth', models.CharField(max_length=100, null=True, blank=True)),
                ('net_worth_as_on', models.DateField(null=True, blank=True)),
                ('accepted_declaration', models.BooleanField(default=0)),
                ('place_of_birth', models.CharField(max_length=50, blank=True)),
                ('country_of_birth', models.CharField(max_length=50, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('user_profile', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.UserProfile', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical member',
            },
        ),
        migrations.CreateModel(
            name='HistoricalMemberQuestion',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('questions', models.TextField(blank=True)),
                ('date', models.DateTimeField(editable=False, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('member', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Member', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical member question',
            },
        ),
        migrations.CreateModel(
            name='HistoricalNoticeBoard',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('news_type', models.CharField(default=b'notice', max_length=20, choices=[(b'notice', b'notice'), (b'news', b'news')])),
                ('notice_date', models.DateTimeField(null=True, blank=True)),
                ('headline', models.CharField(max_length=500, null=True, blank=True)),
                ('notice', models.TextField(null=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical notice board',
            },
        ),
        migrations.CreateModel(
            name='HistoricalOpportunity',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('name', models.CharField(max_length=140, null=True)),
                ('introduction', models.TextField(null=True, blank=True)),
                ('is_public', models.BooleanField(default=0)),
                ('domicile', models.CharField(max_length=20, null=True, blank=True)),
                ('avg_rating', models.TextField(null=True, blank=True)),
                ('tags', models.CharField(max_length=1000, null=True, blank=True)),
                ('bench_mark', models.CharField(max_length=300, null=True, blank=True)),
                ('payment_category', models.CharField(max_length=20, null=True, blank=True)),
                ('executive_summary', models.TextField(null=True, blank=True)),
                ('fund_overview', models.CharField(max_length=20, null=True, blank=True)),
                ('fund_life', models.CharField(max_length=20, null=True, blank=True)),
                ('strategy', models.CharField(max_length=40, null=True, blank=True)),
                ('investment_structure', models.CharField(max_length=40, null=True, blank=True)),
                ('property_allocation', models.CharField(max_length=40, null=True, blank=True)),
                ('net_target_IRR', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('gross_target_IRR', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('return_payout', models.CharField(max_length=40, null=True, blank=True)),
                ('initial_target_size', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('target_size', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('geography_focus', models.CharField(max_length=40, null=True, blank=True)),
                ('geography_scope', models.CharField(max_length=40, null=True, blank=True)),
                ('subscription_open_date', models.DateField(null=True, blank=True)),
                ('subscription_close_date', models.DateField(null=True, blank=True)),
                ('fund_open_date', models.DateField(null=True, blank=True)),
                ('fund_close_date', models.DateField(null=True, blank=True)),
                ('minimum_investment', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('establishment_expenses', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('management_fees', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('load', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('track_record', models.TextField(null=True, blank=True)),
                ('video_url', models.CharField(max_length=350, null=True, blank=True)),
                ('is_published', models.BooleanField(default=0)),
                ('is_active', models.BooleanField(default=0)),
                ('facebook_post_id', models.CharField(max_length=50, null=True, blank=True)),
                ('google_post_id', models.CharField(max_length=50, null=True, blank=True)),
                ('linkdin_post_id', models.CharField(max_length=50, null=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('fund_sub_category', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.FundSubCategory', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('issuer', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Issuer', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical opportunity',
            },
        ),
        migrations.CreateModel(
            name='HistoricalProject',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=250, blank=True)),
                ('city', models.CharField(max_length=100, blank=True)),
                ('state', models.CharField(max_length=50, blank=True)),
                ('country', models.CharField(max_length=50, blank=True)),
                ('pincode', models.CharField(max_length=15, blank=True)),
                ('actual_price', models.CharField(max_length=20, blank=True)),
                ('discounted_price', models.CharField(max_length=20, blank=True)),
                ('project_start_date', models.DateField(null=True, blank=True)),
                ('project_end_date', models.DateField(null=True, blank=True)),
                ('total_target_price', models.CharField(max_length=20, blank=True)),
                ('total_reingo_square_feet', models.CharField(max_length=20, blank=True)),
                ('square_feet', models.CharField(max_length=20)),
                ('project_video', models.URLField(blank=True)),
                ('google_map_location', django.contrib.gis.db.models.fields.PointField(srid=4326, null=True, blank=True)),
                ('project_layout', django.contrib.gis.db.models.fields.PolygonField(srid=4326, null=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('is_published', models.BooleanField(default=0)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('developer', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Developer', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical project',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPromoCodes',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('promo_code', models.CharField(db_index=True, max_length=10, blank=True)),
                ('code_percent', models.FloatField(default=0)),
                ('expiry_date', models.DateField(null=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('user_profile', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.UserProfile', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical promo codes',
            },
        ),
        migrations.CreateModel(
            name='HistoricalRating',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('agency_rating', models.CharField(max_length=40, null=True, blank=True)),
                ('member_rating', models.FloatField(null=True, blank=True)),
                ('comment', models.TextField(blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('member', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.UserProfile', null=True)),
                ('opportunity', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Opportunity', null=True)),
                ('rating_agency', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.RatingAgency', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical rating',
            },
        ),
        migrations.CreateModel(
            name='HistoricalRatingAgency',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('name', models.CharField(max_length=40, null=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical rating agency',
            },
        ),
        migrations.CreateModel(
            name='HistoricalReferralPoints',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('points', models.IntegerField(null=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('beneficiary', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.UserProfile', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('referralpointstype', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.ReferralPointsType', null=True)),
                ('referred', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.UserProfile', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical referral points',
            },
        ),
        migrations.CreateModel(
            name='HistoricalReferralPointsType',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('name', models.CharField(blank=True, max_length=250, null=True, choices=[(b'signup_advisor', b'singup_advisor'), (b'registered_advisor', b'registered_advisor'), (b'certified_advisor', b'certified_advisor'), (b'crisil_advisor', b'crisil_advisor'), (b'first_transcation_advisor', b'first_transcation_advisor'), (b'more_than_one_transcation_advisor', b'more_than_one_transcation_advisor'), (b'bonus_for_crossing_100s_advisor', b'bonus_for_crossing_100s_advisor'), (b'surprise_bonus_advisor', b'surprise_bonus_advisor')])),
                ('points', models.IntegerField(default=0)),
                ('level', models.IntegerField(default=0, null=True, blank=True, choices=[(1, b'Parent'), (2, b'Grand-Parent')])),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical referral points type',
            },
        ),
        migrations.CreateModel(
            name='HistoricalReingo',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('name', models.CharField(max_length=20, blank=True)),
                ('geom', django.contrib.gis.db.models.fields.PolygonField(srid=4326, null=True, blank=True)),
                ('door_number', models.CharField(max_length=10, null=True, blank=True)),
                ('square_feet', models.CharField(max_length=20, null=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('allocated', models.BooleanField(default=False)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('floor', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Level', null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical reingo',
            },
        ),
        migrations.CreateModel(
            name='HistoricalResearchReports',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('description', models.CharField(max_length=255, null=True, blank=True)),
                ('report', models.TextField(max_length=100, null=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('opportunity', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Opportunity', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical research reports',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSignzy',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('urls', models.TextField(blank=True)),
                ('extracted_data', models.TextField(blank=True)),
                ('verification_data', models.TextField(blank=True)),
                ('documents_type', models.CharField(max_length=30)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('user_profile', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.UserProfile', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical signzy',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSocialMedia',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('sm_source', models.CharField(max_length=50, choices=[(b'google', b'Google'), (b'facebook', b'Facebook'), (b'linkedin', b'Linkedin'), (b'twitter', b'twitter')])),
                ('social_media_id', models.CharField(max_length=50, blank=True)),
                ('title', models.CharField(max_length=50, null=True, blank=True)),
                ('first_name', models.CharField(max_length=50, null=True, blank=True)),
                ('middle_name', models.CharField(max_length=50, null=True, blank=True)),
                ('last_name', models.CharField(max_length=50, null=True, blank=True)),
                ('gender', models.CharField(max_length=50, null=True, blank=True)),
                ('email_id', models.CharField(max_length=50, null=True, blank=True)),
                ('mobile', models.CharField(max_length=20, null=True, blank=True)),
                ('sm_community_details', models.TextField(null=True, blank=True)),
                ('sm_post_details', models.TextField(null=True, blank=True)),
                ('sm_profile_picture', models.URLField(null=True, blank=True)),
                ('sm_other_details', models.TextField(null=True, blank=True)),
                ('created_date', models.DateTimeField(editable=False, blank=True)),
                ('modified_date', models.DateTimeField(editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('user_profile', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.UserProfile', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical social media',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSocialMediaLikesShareCount',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('url', models.URLField(db_index=True)),
                ('facebook_likes', models.IntegerField(default=0, blank=True)),
                ('facebook_shares', models.IntegerField(default=0, blank=True)),
                ('google_plus_shares', models.IntegerField(default=0, blank=True)),
                ('linkedin_shares', models.IntegerField(default=0, blank=True)),
                ('total_count', models.IntegerField(default=0, blank=True)),
                ('created_date', models.DateTimeField(editable=False, blank=True)),
                ('modified_date', models.DateTimeField(editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical social media likes share count',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTrackWebinar',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('room_id', models.CharField(default=b'0', max_length=10, null=True, blank=True)),
                ('room_name', models.CharField(default=b'None', max_length=250, null=True, blank=True)),
                ('room_url', models.CharField(max_length=250, null=True, blank=True)),
                ('room_pin', models.CharField(max_length=10, null=True, blank=True)),
                ('room_type', models.CharField(default=b'webinar', max_length=10, blank=True)),
                ('starts_at', models.DateTimeField(null=True, editable=False, blank=True)),
                ('duration', models.DurationField(default=datetime.timedelta(0))),
                ('session_id', models.CharField(max_length=10, null=True, blank=True)),
                ('session_data', models.TextField(blank=True)),
                ('session_ended', models.BooleanField(default=0)),
                ('password', models.CharField(max_length=50, null=True, blank=True)),
                ('auto_login_host_url', models.TextField(null=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('user_profile', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.UserProfile', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical track webinar',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTransactionsDetails',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('invoice_number', models.CharField(db_index=True, max_length=25, blank=True)),
                ('bank_name', models.CharField(max_length=50, null=True, blank=True)),
                ('cheque_dd_no', models.CharField(max_length=50, null=True, blank=True)),
                ('cheque_dd_date', models.DateField(null=True, blank=True)),
                ('description', models.TextField(blank=True)),
                ('amount', models.FloatField(default=0)),
                ('promo_code', models.CharField(max_length=20, null=True, blank=True)),
                ('discounted_amount', models.FloatField(default=0)),
                ('credited_date', models.DateField(null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True, choices=[(b'reconciled', b'Reconciled'), (b'bounced', b'Bounced')])),
                ('transaction_type', models.CharField(blank=True, max_length=10, null=True, choices=[(b'offline', b'Offline'), (b'online', b'Online')])),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('upload_cheque_dd_id', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.UploadDocuments', null=True)),
                ('user_profile', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.UserProfile', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical transactions details',
            },
        ),
        migrations.CreateModel(
            name='HistoricalUploadDocuments',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('documents', models.TextField(max_length=100)),
                ('documents_type', models.CharField(max_length=40, blank=True)),
                ('registration_number', models.CharField(max_length=30, null=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('user_profile', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.UserProfile', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical upload documents',
            },
        ),
        migrations.CreateModel(
            name='HistoricalUploadFile',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('document', models.TextField(max_length=100)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('project', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Project', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical upload file',
            },
        ),
        migrations.CreateModel(
            name='HistoricalUploadImage',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('image', models.TextField(max_length=100)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('project', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Project', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical upload image',
            },
        ),
        migrations.CreateModel(
            name='HistoricalUserProfile',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('registration_id', models.CharField(max_length=10, blank=True)),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(max_length=50, blank=True)),
                ('last_name', models.CharField(max_length=50, blank=True)),
                ('suffix', models.CharField(max_length=5, blank=True)),
                ('gender', models.CharField(blank=True, max_length=1, choices=[(b'M', b'Male'), (b'F', b'Female'), (b'O', b'Other')])),
                ('birthdate', models.DateField(null=True, blank=True)),
                ('father_name', models.CharField(max_length=50, blank=True)),
                ('mother_name', models.CharField(max_length=50, blank=True)),
                ('marital_status', models.CharField(blank=True, max_length=1, choices=[(b'Y', b'Yes'), (b'N', b'No')])),
                ('spouse_name', models.CharField(max_length=50, blank=True)),
                ('no_of_child', models.CharField(max_length=2, blank=True)),
                ('passport_no', models.CharField(max_length=15, blank=True)),
                ('passport_valid_upto', models.DateField(null=True, blank=True)),
                ('pan_no', models.CharField(max_length=15, blank=True)),
                ('adhaar_card', models.CharField(max_length=15, blank=True)),
                ('issued_on', models.DateField(null=True, blank=True)),
                ('email', models.CharField(max_length=250, db_index=True)),
                ('secondary_email', models.CharField(db_index=True, max_length=250, blank=True)),
                ('mobile', models.CharField(max_length=20, db_index=True)),
                ('mobile2', models.CharField(max_length=20, blank=True)),
                ('landline', models.CharField(max_length=20, blank=True)),
                ('faxno', models.CharField(max_length=10, blank=True)),
                ('door_no', models.CharField(max_length=50, blank=True)),
                ('street_name', models.CharField(max_length=250, blank=True)),
                ('address', models.CharField(max_length=250, blank=True)),
                ('locality', models.CharField(max_length=150, blank=True)),
                ('landmark', models.CharField(max_length=100, blank=True)),
                ('city', models.CharField(max_length=50, blank=True)),
                ('state', models.CharField(max_length=50, blank=True)),
                ('country', models.CharField(max_length=50, blank=True)),
                ('pincode', models.CharField(max_length=15, blank=True)),
                ('nationality', models.CharField(max_length=100, blank=True)),
                ('blood_group', models.CharField(max_length=10, blank=True)),
                ('picture', models.TextField(max_length=100, blank=True)),
                ('source_media', models.CharField(max_length=250, blank=True)),
                ('facebook_media', models.CharField(max_length=250, blank=True)),
                ('google_media', models.CharField(max_length=250, blank=True)),
                ('linkedin_media', models.CharField(max_length=250, blank=True)),
                ('twitter_media', models.CharField(max_length=250, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('qualification', models.CharField(max_length=100, blank=True)),
                ('college_name', models.CharField(max_length=100, blank=True)),
                ('year_passout', models.CharField(max_length=4, blank=True)),
                ('additional_qualification', models.TextField(blank=True)),
                ('occupation', models.CharField(max_length=50, blank=True)),
                ('company_name', models.CharField(max_length=80, blank=True)),
                ('organisation_type', models.CharField(max_length=80, blank=True)),
                ('company_address1', models.CharField(max_length=250, blank=True)),
                ('company_address2', models.CharField(max_length=250, blank=True)),
                ('company_landmark', models.CharField(max_length=100, blank=True)),
                ('company_location', models.CharField(max_length=100, blank=True)),
                ('company_state', models.CharField(max_length=50, blank=True)),
                ('company_country', models.CharField(max_length=50, null=True, blank=True)),
                ('company_locality', models.CharField(max_length=100, blank=True)),
                ('company_city', models.CharField(max_length=50, blank=True)),
                ('company_website', models.CharField(max_length=100, blank=True)),
                ('company_pincode', models.CharField(max_length=15, blank=True)),
                ('language_known', models.CharField(max_length=200, blank=True)),
                ('designation', models.CharField(max_length=50, blank=True)),
                ('total_experience', models.IntegerField(default=2, blank=True)),
                ('annual_income', models.CharField(max_length=20, blank=True)),
                ('is_admin', models.BooleanField(default=0)),
                ('is_advisor', models.BooleanField(default=0)),
                ('is_developer', models.BooleanField(default=0)),
                ('is_member', models.BooleanField(default=0)),
                ('is_trustee', models.BooleanField(default=0)),
                ('is_customer', models.BooleanField(default=0)),
                ('is_escrow_agent', models.BooleanField(default=0)),
                ('is_project_admin', models.BooleanField(default=0)),
                ('is_project_coordinator', models.BooleanField(default=0)),
                ('is_investment_admin', models.BooleanField(default=0)),
                ('referral_code', models.CharField(max_length=50, null=True, blank=True)),
                ('total_points', models.IntegerField(default=0, null=True, blank=True)),
                ('know_duration', models.PositiveSmallIntegerField(null=True, blank=True)),
                ('know_how', models.CharField(max_length=300, null=True, blank=True)),
                ('languages_known_read_write', models.TextField(null=True, blank=True)),
                ('mother_tongue', models.CharField(max_length=100, null=True, blank=True)),
                ('primary_communication', models.CharField(max_length=10, null=True, blank=True)),
                ('login_count', models.IntegerField(default=0)),
                ('communication_email_id', models.CharField(max_length=10, null=True, blank=True)),
                ('proof_of_identity', models.CharField(blank=True, max_length=50, choices=[(b'pan', b'PAN'), (b'aadhaar', b'Aadhaar'), (b'passport', b'Passport'), (b'voter_id', b'Voter-ID')])),
                ('proof_of_address', models.CharField(blank=True, max_length=50, choices=[(b'aadhaar', b'Aadhaar'), (b'passport', b'Passport'), (b'voter_id', b'Voter-ID'), (b'driving_license', b'Driving-License')])),
                ('is_alternate_address', models.CharField(max_length=10, blank=True)),
                ('alternate_address_line_1', models.TextField(blank=True)),
                ('alternate_address_line_2', models.TextField(blank=True)),
                ('alternate_location', models.CharField(max_length=100, blank=True)),
                ('alternate_city', models.CharField(max_length=50, blank=True)),
                ('alternate_state', models.CharField(max_length=50, blank=True)),
                ('alternate_country', models.CharField(max_length=50, blank=True)),
                ('alternate_pincode', models.CharField(max_length=15, blank=True)),
                ('alternate_phone_no', models.CharField(max_length=20, blank=True)),
                ('politically_status', models.CharField(blank=True, max_length=50, choices=[(b'PEP', b'Politically Exposed Person'), (b'RELATED_PEP', b'Related to PEP'), (b'NONE', b'None')])),
                ('resedential_status', models.CharField(blank=True, max_length=50, choices=[(b'INDIAN', b'Indian'), (b'NRI', b'NRI (Non Resident Indian)'), (b'FOREIGNER', b'Foreigner')])),
                ('my_belief', models.CharField(default=b'Service is my Motto', max_length=300, null=True, blank=True)),
                ('is_filled_identity', models.BooleanField(default=0)),
                ('is_filled_address', models.BooleanField(default=0)),
                ('driving_license', models.CharField(max_length=20, null=True, blank=True)),
                ('driving_license_expire_date', models.DateField(null=True, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('created_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('referred_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical user profile',
            },
        ),
        migrations.CreateModel(
            name='HistoricalUserReferral',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('name', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50, db_index=True)),
                ('phone', models.CharField(max_length=10, db_index=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('referred_by', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical user referral',
            },
        ),
        migrations.CreateModel(
            name='HistoricalWishList',
            fields=[
                ('id', models.IntegerField(verbose_name='ID', db_index=True, auto_created=True, blank=True)),
                ('created_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('modified_date', models.DateTimeField(null=True, editable=False, blank=True)),
                ('history_id', models.AutoField(serialize=False, primary_key=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(max_length=1, choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')])),
                ('history_user', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, null=True)),
                ('investor', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Investor', null=True)),
                ('reingo', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.DO_NOTHING, db_constraint=False, blank=True, to='datacenter.Reingo', null=True)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical wish list',
            },
        ),
    ]
