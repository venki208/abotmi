# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import datetime
import datacenter.fields
import django.contrib.gis.db.models.fields
import datacenter.models.investment
import datacenter.models.accounts
from django.conf import settings
import django.core.validators
import datacenter.models.reingo


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Advisor',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('my_promise', models.TextField(blank=True)),
                ('questions', models.TextField(blank=True)),
                ('profile_confirmation_mail', models.BooleanField(default=0)),
                ('is_submitted_questions', models.BooleanField(default=0)),
                ('is_document_submited', models.BooleanField(default=0)),
                ('is_submitted_all', models.BooleanField(default=0)),
                ('is_confirmed_advisor', models.BooleanField(default=0)),
                ('is_register_advisor', models.BooleanField(default=0)),
                ('is_stream_user', models.BooleanField(default=0)),
                ('is_certified_advisor', models.BooleanField(default=0)),
                ('is_corporate_advisor', models.BooleanField(default=0)),
                ('wordpress_user_id', models.CharField(default=0, max_length=10)),
                ('is_crisil_verified', models.BooleanField(default=0)),
                ('crisil_registration_number', models.CharField(max_length=30, null=True, blank=True)),
                ('is_registered_advisor', models.BooleanField(default=0)),
                ('sebi_number', models.CharField(max_length=50, null=True, blank=True)),
                ('amfi_number', models.CharField(max_length=50, null=True, blank=True)),
                ('irda_number', models.CharField(max_length=50, null=True, blank=True)),
                ('sebi_expiry_date', models.DateField(null=True, blank=True)),
                ('irda_expiry_date', models.DateField(null=True, blank=True)),
                ('amfi_expiry_date', models.DateField(null=True, blank=True)),
                ('other_expiry_date', models.DateField(null=True, blank=True)),
                ('other_registered_organisation', models.CharField(max_length=100, null=True, blank=True)),
                ('other_registered_number', models.CharField(max_length=50, null=True, blank=True)),
                ('practice_city', models.CharField(max_length=50, null=True, blank=True)),
                ('practice_location', models.CharField(max_length=50, null=True, blank=True)),
                ('practice_years', models.PositiveIntegerField(null=True, blank=True)),
                ('financial_instruments', models.TextField(null=True, blank=True)),
                ('other_financial_instruments', models.CharField(max_length=50, null=True, blank=True)),
                ('credibility_declaration_qualification', models.CharField(max_length=50, null=True, blank=True)),
                ('certification_title', models.TextField(null=True, blank=True)),
                ('reia_level', models.TextField(default=b'REISE - Real Estate Investment Support Executive')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AdvisorRanking',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('rating', models.FloatField(null=True, blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('advisor', models.ForeignKey(to='datacenter.Advisor')),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AdvisorRating',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('trust', models.FloatField(default=0)),
                ('financial_knowledge', models.FloatField(default=0)),
                ('communication', models.FloatField(default=0)),
                ('advisory', models.FloatField(default=0)),
                ('ethics', models.FloatField(default=0)),
                ('customer_care', models.FloatField(default=0)),
                ('no_of_questions', models.FloatField(default=6)),
                ('avg_rating', models.FloatField(default=0)),
                ('activation_key', models.CharField(max_length=250, null=True, blank=True)),
                ('user_type', models.CharField(max_length=20, null=True, blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('advisor', models.ForeignKey(blank=True, to='datacenter.Advisor', null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AdvisorType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=50, null=True, blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('is_management', models.BooleanField(default=0)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Allocation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=20, blank=True)),
                ('floor_count', models.PositiveSmallIntegerField(default=5)),
                ('square_feet', models.PositiveIntegerField(default=1000)),
                ('block_layout', django.contrib.gis.db.models.fields.PolygonField(srid=4326, null=True, blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BookingInvestment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('issued_amount', models.IntegerField(default=0, blank=True)),
                ('allocated_amount', models.IntegerField(default=0, blank=True)),
                ('allocated_date', models.DateField(auto_now_add=True, null=True)),
                ('payment_details', datacenter.fields.JSONField(null=True, blank=True)),
                ('remarks', models.TextField(null=True, blank=True)),
                ('status', models.CharField(blank=True, max_length=20, choices=[(b'booked', b'Booked'), (b'cheque_collected', b'Cheque Collected'), (b'cheque_deposited', b'Cheque Deposited'), (b'cheque_realised', b'Cheque Realised'), (b'cheque_rejected', b'Cheque Rejected'), (b'allocated', b'Allocated'), (b'rejected', b'Rejected')])),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('advisor', models.ForeignKey(blank=True, to='datacenter.Advisor', null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=250, null=True, blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=50)),
                ('tin', models.CharField(max_length=50)),
                ('registration_number', models.CharField(max_length=25)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('document', models.FileField(upload_to=datacenter.models.investment.path_to_upload)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DocumentCategories',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=50, null=True, blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EmailVerification',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('key_expires', models.DateTimeField(auto_now=True)),
                ('activation_key', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ExternalUser',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=50, null=True, blank=True)),
                ('email', models.EmailField(max_length=254, null=True, blank=True)),
                ('phone', models.CharField(max_length=50, null=True, blank=True)),
                ('sebi_number', models.CharField(max_length=50, null=True, blank=True)),
                ('sebi_expiry_date', models.DateTimeField(null=True, blank=True)),
                ('amfi_number', models.CharField(max_length=50, null=True, blank=True)),
                ('amfi_expiry_date', models.DateTimeField(null=True, blank=True)),
                ('irda_number', models.CharField(max_length=50, null=True, blank=True)),
                ('irda_expiry_date', models.DateTimeField(null=True, blank=True)),
                ('other_registered_organisation', models.CharField(max_length=100, null=True, blank=True)),
                ('other_registered_number', models.CharField(max_length=50, null=True, blank=True)),
                ('other_certificate_expiry_date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FundCategory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FundSubCategory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('category', models.ForeignKey(blank=True, to='datacenter.FundCategory', null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='India_Pincode',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('pin_code', models.BigIntegerField()),
                ('state_name', models.CharField(max_length=50)),
                ('district_name', models.CharField(max_length=50)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Investor',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Issuer',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=50, blank=True)),
                ('address', models.CharField(max_length=250, null=True, blank=True)),
                ('telephone', models.CharField(max_length=15, null=True, blank=True)),
                ('fax', models.CharField(max_length=15, null=True, blank=True)),
                ('website', models.CharField(max_length=50, null=True, blank=True)),
                ('email', models.CharField(max_length=50, null=True, blank=True)),
                ('other_offices', models.CharField(max_length=250, null=True, blank=True)),
                ('staff', models.CharField(max_length=250, null=True, blank=True)),
                ('investment_statistics', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('total_capital_raised', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('est_available_capital', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('typical_investment_size', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('background', models.CharField(max_length=250, null=True, blank=True)),
                ('year_established', models.DateField(null=True, blank=True)),
                ('preferences_strategy', models.CharField(max_length=20, null=True, choices=[(b'core', b'Core'), (b'core_plus', b'Core-Plus'), (b'debit', b'Debit'), (b'distressed', b'Distressed')])),
                ('property_type', models.CharField(max_length=20, null=True, choices=[(b'residential', b'Residential'), (b'commercial', b'Commercial')])),
                ('geography', models.CharField(max_length=40, null=True, blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('number', models.PositiveSmallIntegerField(default=1)),
                ('unit_count', models.PositiveSmallIntegerField(default=2)),
                ('plan', models.ImageField(upload_to=datacenter.models.reingo.path_to_upload)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('block', models.ForeignKey(to='datacenter.Block')),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MeetUpEvent',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('scheduled', models.DateTimeField(null=True, blank=True)),
                ('address', models.CharField(max_length=500, null=True, blank=True)),
                ('name', models.CharField(max_length=50, null=True, blank=True)),
                ('meetup_event_id', models.CharField(max_length=20, null=True, blank=True)),
                ('description', models.CharField(max_length=800, null=True, blank=True)),
                ('duration', models.CharField(max_length=30, null=True, blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('occupation', models.CharField(max_length=80, blank=True)),
                ('office_location', models.CharField(max_length=50, blank=True)),
                ('office_city', models.CharField(max_length=50, blank=True)),
                ('office_website', models.CharField(max_length=100, blank=True)),
                ('designation', models.CharField(max_length=50, blank=True)),
                ('year_income', models.CharField(max_length=20, blank=True)),
                ('member_questions', models.TextField(blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('is_submitted_all', models.BooleanField(default=0)),
                ('is_register_member', models.BooleanField(default=0)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MemberQuestion',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('questions', models.TextField(blank=True)),
                ('date', models.DateTimeField(auto_now=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('member', models.ForeignKey(blank=True, to='datacenter.Member', null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NoticeBoard',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('news_type', models.CharField(default=b'notice', max_length=20, choices=[(b'notice', b'notice'), (b'news', b'news')])),
                ('notice_date', models.DateTimeField(null=True, blank=True)),
                ('headline', models.CharField(max_length=500, null=True, blank=True)),
                ('notice', models.TextField(null=True, blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Opportunity',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=140, null=True)),
                ('introduction', models.TextField(null=True, blank=True)),
                ('is_public', models.BooleanField(default=0)),
                ('domicile', models.CharField(max_length=20, null=True, blank=True)),
                ('avg_rating', models.TextField(null=True, blank=True)),
                ('tags', models.CharField(max_length=1000, null=True, blank=True)),
                ('bench_mark', models.CharField(max_length=300, null=True, blank=True)),
                ('payment_category', models.CharField(max_length=20, null=True, blank=True)),
                ('executive_summary', models.TextField(null=True, blank=True)),
                ('fund_overview', models.CharField(max_length=20, null=True, blank=True)),
                ('fund_life', models.CharField(max_length=20, null=True, blank=True)),
                ('strategy', models.CharField(max_length=40, null=True, blank=True)),
                ('investment_structure', models.CharField(max_length=40, null=True, blank=True)),
                ('property_allocation', models.CharField(max_length=40, null=True, blank=True)),
                ('net_target_IRR', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('gross_target_IRR', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('return_payout', models.CharField(max_length=40, null=True, blank=True)),
                ('initial_target_size', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('target_size', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('geography_focus', models.CharField(max_length=40, null=True, blank=True)),
                ('geography_scope', models.CharField(max_length=40, null=True, blank=True)),
                ('subscription_open_date', models.DateField(null=True, blank=True)),
                ('subscription_close_date', models.DateField(null=True, blank=True)),
                ('fund_open_date', models.DateField(null=True, blank=True)),
                ('fund_close_date', models.DateField(null=True, blank=True)),
                ('minimum_investment', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('establishment_expenses', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('management_fees', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('load', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('track_record', models.TextField(null=True, blank=True)),
                ('video_url', models.CharField(max_length=350, null=True, blank=True)),
                ('is_published', models.BooleanField(default=0)),
                ('is_active', models.BooleanField(default=0)),
                ('facebook_post_id', models.CharField(max_length=50, null=True, blank=True)),
                ('google_post_id', models.CharField(max_length=50, null=True, blank=True)),
                ('linkdin_post_id', models.CharField(max_length=50, null=True, blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('fund_sub_category', models.ForeignKey(blank=True, to='datacenter.FundSubCategory', null=True)),
                ('issuer', models.ForeignKey(to='datacenter.Issuer')),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=250, blank=True)),
                ('city', models.CharField(max_length=100, blank=True)),
                ('state', models.CharField(max_length=50, blank=True)),
                ('country', models.CharField(max_length=50, blank=True)),
                ('pincode', models.CharField(max_length=15, blank=True)),
                ('actual_price', models.CharField(max_length=20, blank=True)),
                ('discounted_price', models.CharField(max_length=20, blank=True)),
                ('project_start_date', models.DateField(null=True, blank=True)),
                ('project_end_date', models.DateField(null=True, blank=True)),
                ('total_target_price', models.CharField(max_length=20, blank=True)),
                ('total_reingo_square_feet', models.CharField(max_length=20, blank=True)),
                ('square_feet', models.CharField(max_length=20)),
                ('project_video', models.URLField(blank=True)),
                ('google_map_location', django.contrib.gis.db.models.fields.PointField(srid=4326, null=True, blank=True)),
                ('project_layout', django.contrib.gis.db.models.fields.PolygonField(srid=4326, null=True, blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('is_published', models.BooleanField(default=0)),
                ('developer', models.ForeignKey(to='datacenter.Developer')),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('agency_rating', models.CharField(max_length=40, null=True, blank=True)),
                ('member_rating', models.FloatField(null=True, blank=True)),
                ('comment', models.TextField(blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RatingAgency',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=40, null=True, blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReferralPoints',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('points', models.IntegerField(null=True, blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReferralPointsType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(blank=True, max_length=250, null=True, choices=[(b'signup_advisor', b'singup_advisor'), (b'registered_advisor', b'registered_advisor'), (b'certified_advisor', b'certified_advisor'), (b'crisil_advisor', b'crisil_advisor'), (b'first_transcation_advisor', b'first_transcation_advisor'), (b'more_than_one_transcation_advisor', b'more_than_one_transcation_advisor'), (b'bonus_for_crossing_100s_advisor', b'bonus_for_crossing_100s_advisor'), (b'surprise_bonus_advisor', b'surprise_bonus_advisor')])),
                ('points', models.IntegerField(default=0)),
                ('level', models.IntegerField(default=0, null=True, blank=True, choices=[(1, b'Parent'), (2, b'Grand-Parent')])),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Reingo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=20, blank=True)),
                ('geom', django.contrib.gis.db.models.fields.PolygonField(srid=4326, null=True, blank=True)),
                ('door_number', models.CharField(max_length=10, null=True, blank=True)),
                ('square_feet', models.CharField(max_length=20, null=True, blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('allocated', models.BooleanField(default=False)),
                ('floor', models.ForeignKey(to='datacenter.Level')),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ResearchReports',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('description', models.CharField(max_length=255, null=True, blank=True)),
                ('report', models.FileField(null=True, upload_to=b'uploads', blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('opportunity', models.ForeignKey(to='datacenter.Opportunity')),
            ],
        ),
        migrations.CreateModel(
            name='TrackReferrals',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=50, null=True, blank=True)),
                ('email', models.EmailField(max_length=70, null=True, blank=True)),
                ('phone', models.CharField(max_length=10, null=True, blank=True)),
                ('location', models.CharField(max_length=100, null=True, blank=True)),
                ('products_serviced', models.CharField(max_length=30, null=True, blank=True)),
                ('registered_financial_advisor', models.BooleanField(default=0)),
                ('sebi_reg_no', models.CharField(max_length=30, null=True, blank=True)),
                ('amfi_reg_no', models.CharField(max_length=30, null=True, blank=True)),
                ('irda_reg_no', models.CharField(max_length=30, null=True, blank=True)),
                ('crisil_verified_no', models.CharField(max_length=30, null=True, blank=True)),
                ('know_duration', models.IntegerField(null=True, blank=True)),
                ('believe_become_advisor', models.CharField(max_length=300, null=True, blank=True)),
                ('referral_user_type', models.CharField(max_length=20, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TrackWebinar',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('room_id', models.CharField(default=b'0', max_length=10, null=True, blank=True)),
                ('room_name', models.CharField(default=b'None', max_length=250, null=True, blank=True)),
                ('room_url', models.CharField(max_length=250, null=True, blank=True)),
                ('room_pin', models.CharField(max_length=10, null=True, blank=True)),
                ('room_type', models.CharField(default=b'webinar', max_length=10, blank=True)),
                ('starts_at', models.DateTimeField(auto_now=True, null=True)),
                ('duration', models.DurationField(default=datetime.timedelta(0))),
                ('session_id', models.CharField(max_length=10, null=True, blank=True)),
                ('session_data', models.TextField(blank=True)),
                ('session_ended', models.BooleanField(default=0)),
                ('password', models.CharField(max_length=50, null=True, blank=True)),
                ('auto_login_host_url', models.TextField(null=True, blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UploadDocuments',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('documents', models.FileField(upload_to=datacenter.models.accounts.content_file_name)),
                ('documents_type', models.CharField(max_length=40, blank=True)),
                ('registration_number', models.CharField(max_length=30, null=True, blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UploadFile',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('document', models.FileField(upload_to=datacenter.models.reingo.path_to_upload)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('project', models.ForeignKey(to='datacenter.Project')),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UploadImage',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('image', models.ImageField(upload_to=datacenter.models.reingo.path_to_upload)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('project', models.ForeignKey(to='datacenter.Project')),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('registration_id', models.CharField(max_length=10, blank=True)),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(max_length=50, blank=True)),
                ('last_name', models.CharField(max_length=50, blank=True)),
                ('suffix', models.CharField(max_length=5, blank=True)),
                ('gender', models.CharField(blank=True, max_length=1, choices=[(b'M', b'Male'), (b'F', b'Female'), (b'O', b'Other')])),
                ('birthdate', models.DateField(null=True, blank=True)),
                ('father_name', models.CharField(max_length=50, blank=True)),
                ('mother_name', models.CharField(max_length=50, blank=True)),
                ('marital_status', models.CharField(blank=True, max_length=1, choices=[(b'Y', b'Yes'), (b'N', b'No')])),
                ('spouse_name', models.CharField(max_length=50, blank=True)),
                ('no_of_child', models.CharField(max_length=2, blank=True)),
                ('passport_no', models.CharField(max_length=15, blank=True)),
                ('passport_valid_upto', models.DateField(null=True, blank=True)),
                ('pan_no', models.CharField(max_length=15, blank=True)),
                ('adhaar_card', models.CharField(max_length=15, blank=True)),
                ('issued_on', models.DateField(null=True, blank=True)),
                ('email', models.CharField(max_length=250)),
                ('secondary_email', models.CharField(max_length=250, blank=True)),
                ('mobile', models.CharField(max_length=20)),
                ('mobile2', models.CharField(max_length=20, blank=True)),
                ('landline', models.CharField(max_length=15, blank=True)),
                ('faxno', models.CharField(max_length=10, blank=True)),
                ('door_no', models.CharField(max_length=50, blank=True)),
                ('street_name', models.CharField(max_length=250, blank=True)),
                ('address', models.CharField(max_length=250, blank=True)),
                ('locality', models.CharField(max_length=150, blank=True)),
                ('landmark', models.CharField(max_length=100, blank=True)),
                ('city', models.CharField(max_length=50, blank=True)),
                ('state', models.CharField(max_length=50, blank=True)),
                ('country', models.CharField(max_length=50, blank=True)),
                ('pincode', models.CharField(max_length=15, blank=True)),
                ('nationality', models.CharField(max_length=100, blank=True)),
                ('blood_group', models.CharField(max_length=10, blank=True)),
                ('picture', models.ImageField(upload_to=datacenter.models.accounts.profile_picture_name, blank=True)),
                ('source_media', models.CharField(max_length=250, blank=True)),
                ('facebook_media', models.CharField(max_length=250, blank=True)),
                ('google_media', models.CharField(max_length=250, blank=True)),
                ('linkedin_media', models.CharField(max_length=250, blank=True)),
                ('twitter_media', models.CharField(max_length=250, blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('qualification', models.CharField(max_length=100, blank=True)),
                ('college_name', models.CharField(max_length=100, blank=True)),
                ('year_passout', models.CharField(max_length=4, blank=True)),
                ('additional_qualification', models.TextField(blank=True)),
                ('occupation', models.CharField(max_length=50, blank=True)),
                ('company_name', models.CharField(max_length=80, blank=True)),
                ('organisation_type', models.CharField(max_length=80, blank=True)),
                ('company_address1', models.CharField(max_length=250, blank=True)),
                ('company_address2', models.CharField(max_length=250, blank=True)),
                ('company_landmark', models.CharField(max_length=100, blank=True)),
                ('company_location', models.CharField(max_length=100, blank=True)),
                ('company_state', models.CharField(max_length=50, blank=True)),
                ('company_country', models.CharField(max_length=50, null=True, blank=True)),
                ('company_locality', models.CharField(max_length=100, blank=True)),
                ('company_city', models.CharField(max_length=50, blank=True)),
                ('company_website', models.CharField(max_length=100, blank=True)),
                ('company_pincode', models.CharField(max_length=15, blank=True)),
                ('language_known', models.CharField(max_length=200, blank=True)),
                ('designation', models.CharField(max_length=50, blank=True)),
                ('total_experience', models.IntegerField(default=2, blank=True)),
                ('annual_income', models.CharField(max_length=20, blank=True)),
                ('is_admin', models.BooleanField(default=0)),
                ('is_advisor', models.BooleanField(default=0)),
                ('is_developer', models.BooleanField(default=0)),
                ('is_member', models.BooleanField(default=0)),
                ('is_trustee', models.BooleanField(default=0)),
                ('is_customer', models.BooleanField(default=0)),
                ('is_escrow_agent', models.BooleanField(default=0)),
                ('is_project_admin', models.BooleanField(default=0)),
                ('is_project_coordinator', models.BooleanField(default=0)),
                ('is_investment_admin', models.BooleanField(default=0)),
                ('referral_code', models.CharField(max_length=50, null=True, blank=True)),
                ('total_points', models.IntegerField(default=0, null=True, blank=True)),
                ('know_duration', models.PositiveSmallIntegerField(null=True, blank=True)),
                ('know_how', models.CharField(max_length=300, null=True, blank=True)),
                ('created_by', models.ForeignKey(related_name='created_by', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('referred_by', models.ForeignKey(related_name='user_referred', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('user', models.OneToOneField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserReferral',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=50)),
                ('email', models.CharField(unique=True, max_length=50)),
                ('phone', models.CharField(unique=True, max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('referred_by', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WishList',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('investor', models.ForeignKey(to='datacenter.Investor')),
                ('reingo', models.ForeignKey(to='datacenter.Reingo')),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='uploaddocuments',
            name='user_profile',
            field=models.ForeignKey(blank=True, to='datacenter.UserProfile', null=True),
        ),
        migrations.AddField(
            model_name='trackwebinar',
            name='user_profile',
            field=models.ForeignKey(blank=True, to='datacenter.UserProfile', null=True),
        ),
        migrations.AddField(
            model_name='trackreferrals',
            name='referred_by',
            field=models.ForeignKey(to='datacenter.UserProfile'),
        ),
        migrations.AddField(
            model_name='referralpoints',
            name='beneficiary',
            field=models.ForeignKey(related_name='beneficiary', blank=True, to='datacenter.UserProfile', null=True),
        ),
        migrations.AddField(
            model_name='referralpoints',
            name='referralpointstype',
            field=models.ForeignKey(blank=True, to='datacenter.ReferralPointsType', null=True),
        ),
        migrations.AddField(
            model_name='referralpoints',
            name='referred',
            field=models.ForeignKey(related_name='referred', blank=True, to='datacenter.UserProfile', null=True),
        ),
        migrations.AddField(
            model_name='rating',
            name='member',
            field=models.ForeignKey(blank=True, to='datacenter.UserProfile', null=True),
        ),
        migrations.AddField(
            model_name='rating',
            name='opportunity',
            field=models.ForeignKey(related_name='rating', to='datacenter.Opportunity'),
        ),
        migrations.AddField(
            model_name='rating',
            name='rating_agency',
            field=models.ForeignKey(blank=True, to='datacenter.RatingAgency', null=True),
        ),
        migrations.AddField(
            model_name='member',
            name='user_profile',
            field=models.OneToOneField(null=True, blank=True, to='datacenter.UserProfile'),
        ),
        migrations.AddField(
            model_name='meetupevent',
            name='user_profile',
            field=models.ForeignKey(blank=True, to='datacenter.UserProfile', null=True),
        ),
        migrations.AddField(
            model_name='investor',
            name='user_profile',
            field=models.OneToOneField(to='datacenter.UserProfile'),
        ),
        migrations.AddField(
            model_name='emailverification',
            name='user_profile',
            field=models.OneToOneField(null=True, blank=True, to='datacenter.UserProfile'),
        ),
        migrations.AddField(
            model_name='document',
            name='document_category',
            field=models.ForeignKey(blank=True, to='datacenter.DocumentCategories', null=True),
        ),
        migrations.AddField(
            model_name='document',
            name='opportunity',
            field=models.ForeignKey(blank=True, to='datacenter.Opportunity', null=True),
        ),
        migrations.AddField(
            model_name='developer',
            name='user_profile',
            field=models.OneToOneField(to='datacenter.UserProfile'),
        ),
        migrations.AddField(
            model_name='bookinginvestment',
            name='member',
            field=models.ForeignKey(related_name='booked_by', to='datacenter.Member'),
        ),
        migrations.AddField(
            model_name='bookinginvestment',
            name='opportunity',
            field=models.ForeignKey(to='datacenter.Opportunity'),
        ),
        migrations.AddField(
            model_name='booking',
            name='investor',
            field=models.ForeignKey(related_name='booked', to='datacenter.Investor'),
        ),
        migrations.AddField(
            model_name='booking',
            name='reingo',
            field=models.ForeignKey(to='datacenter.Reingo'),
        ),
        migrations.AddField(
            model_name='block',
            name='project',
            field=models.ForeignKey(to='datacenter.Project'),
        ),
        migrations.AddField(
            model_name='allocation',
            name='investor',
            field=models.ForeignKey(related_name='allocated', to='datacenter.Investor'),
        ),
        migrations.AddField(
            model_name='allocation',
            name='reingo',
            field=models.ForeignKey(to='datacenter.Reingo'),
        ),
        migrations.AddField(
            model_name='advisorrating',
            name='existing_user_profile',
            field=models.ForeignKey(blank=True, to='datacenter.UserProfile', null=True),
        ),
        migrations.AddField(
            model_name='advisorrating',
            name='external_user',
            field=models.ForeignKey(blank=True, to='datacenter.ExternalUser', null=True),
        ),
        migrations.AddField(
            model_name='advisorranking',
            name='member',
            field=models.ForeignKey(to='datacenter.Member'),
        ),
        migrations.AddField(
            model_name='advisorranking',
            name='transaction',
            field=models.ForeignKey(blank=True, to='datacenter.BookingInvestment', null=True),
        ),
        migrations.AddField(
            model_name='advisor',
            name='practice_country',
            field=models.ForeignKey(blank=True, to='datacenter.Country', null=True),
        ),
        migrations.AddField(
            model_name='advisor',
            name='type_of_advisor',
            field=models.ForeignKey(blank=True, to='datacenter.AdvisorType', null=True),
        ),
        migrations.AddField(
            model_name='advisor',
            name='user_profile',
            field=models.OneToOneField(null=True, blank=True, to='datacenter.UserProfile'),
        ),
    ]
